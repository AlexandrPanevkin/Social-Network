{"version":3,"file":"static/js/610.8ca2b02e.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__rUsHO\",\"profileIcon\":\"Profile_profileIcon__8tK3C\",\"usersProfileBox\":\"Profile_usersProfileBox__+-Ere\",\"img\":\"Profile_img__oD9gQ\",\"profileInfo\":\"Profile_profileInfo__yEdri\",\"profileFullName\":\"Profile_profileFullName__qErQT\",\"profileDescription\":\"Profile_profileDescription__u8aOj\"};","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__VcfHc\",\"textarea\":\"MyPosts_textarea__19WQV\",\"button\":\"MyPosts_button__Zw4jd\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__0rDNN\",\"postUserIcon\":\"Post_postUserIcon__6KlDb\"};","import React from \"react\";\nimport s from './Post.module.css';\nimport postUserSvg from \"../../../../assets/img/postUser.png\";\n\ntype PostPropsType = {\n    message: string\n    likesCount: number\n}\n\nexport const Post = (props: PostPropsType) => {\n    return (\n        <div className={s.post}>\n            <img className={s.postUserIcon} src={postUserSvg} alt=\"Post User\"/>\n            {props.message}\n            <div>Count of likes: {props.likesCount}</div>\n        </div>\n    )\n}","import React, {memo} from \"react\";\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {ProfilePropsType} from \"./MyPostsContainer\";\nimport {useFormik} from \"formik\";\n\nexport const MyPosts = memo((props: ProfilePropsType) => {\n    let postsElements = props.posts.map(post => <Post key={post.id} message={post.message}\n                                                      likesCount={post.likesCount}/>)\n\n    const onAddPostClickHandler = (newPost: string) => {\n        props.addPost(newPost)\n    }\n    return (\n        <div className={s.myPosts}>\n            <div>My posts:</div>\n            <MyPostsAddItemForm addPost={onAddPostClickHandler}/>\n            <div>{postsElements}</div>\n        </div>\n    )\n})\n\ntype MyPostsAddItemFormType = {\n    addPost: (newPost: string) => void\n}\n\nconst MyPostsAddItemForm = memo((props: MyPostsAddItemFormType) => {\n    const {addPost} = props\n    const formik = useFormik({\n        initialValues: {\n            post: ''\n        },\n        onSubmit: values => {\n            addPost(values.post)\n\n        },\n    })\n    return <form onSubmit={formik.handleSubmit}>\n        <div><textarea {...formik.getFieldProps('post')} className={s.textarea}/></div>\n        <div>\n            <button className={s.button}>Add post</button>\n        </div>\n    </form>\n})","import React from \"react\";\nimport {addPostAC, InitialStateProfileType} from \"../../../Redux/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../../Redux/reduxStore\";\nimport {Dispatch} from \"redux\";\n\ntype mapDispatchToProfilePropsType = {\n    addPost: (newPost: string) => void\n}\n\nexport type ProfilePropsType = InitialStateProfileType & mapDispatchToProfilePropsType\n\nconst mapStateToProps = (state: StateType): InitialStateProfileType => {\n    return {\n        posts: state.ProfilePage.posts,\n        newPostText: state.ProfilePage.newPostText,\n        profile: state.ProfilePage.profile,\n        status: state.ProfilePage.status\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToProfilePropsType => {\n    return {\n        addPost: (newPost:string) => {\n            dispatch(addPostAC(newPost))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React, {ChangeEvent} from \"react\";\n\ntype statusPropsType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\ntype StateType = {\n    editMode: boolean\n    status: string\n}\n\nexport class ProfileStatus extends React.Component<statusPropsType, StateType> {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    activateEditMode = () => {\n        this.setState({\n            editMode: true\n        });\n    }\n    deactivateEditMode = () => {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status)\n    }\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n    }\n    componentDidUpdate(prevProps: Readonly<statusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || 'There is no status'}</span>\n                    </div>\n                }\n                {this.state.editMode &&\n                    <div>\n                        <input autoFocus onChange={this.onStatusChange} onBlur={this.deactivateEditMode.bind(this)}\n                               value={this.state.status}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}","import React, {memo} from \"react\";\nimport mainJpg from \"../../../assets/img/main.jpg\";\nimport s from '../Profile.module.css';\nimport {Preloader} from \"../../Common/Preloader/Preloader\";\nimport {ProfileType} from \"../../../Redux/profileReducer\";\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\n\ntype ProfileInfoPropsType = {\n    profile: ProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n}\n\nexport const ProfileInfo = memo(({profile, status, updateStatus}: ProfileInfoPropsType) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <div className={s.profile}>\n            <div>\n                <img className={s.profileIcon} src={mainJpg} alt=\"Main\"/>\n            </div>\n            <div className={s.usersProfileBox}>\n                <img className={s.img} src={profile.photos.large} alt='profile'/>\n                <div className={s.profileInfo}>\n                    <span className={s.profileFullName}>{profile.fullName}</span>\n                    <span\n                        className={s.profileDescription}>lookingForAJobDescription: {profile.lookingForAJobDescription}</span>\n                    <span>\n                        <ProfileStatus updateStatus={updateStatus} status={status}/>\n                    </span>\n                </div>\n            </div>\n        </div>\n    )\n})","import React, {memo} from \"react\";\nimport s from './Profile.module.css';\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {ProfileType} from \"../../Redux/profileReducer\";\n\ntype ProfilePropsType = {\n    profile: ProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n}\n\nexport const Profile = memo((props: ProfilePropsType) => {\n    return (\n        <div className={s.profile}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n})","import React, {FC} from \"react\";\nimport {getStatus, getUserProfile, InitialStateProfileType, updateStatus,} from \"../../Redux/profileReducer\";\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../Redux/reduxStore\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype pathParamsType = {\n    userId: string\n}\n\nexport type mapDispatchProfilePropsType = {\n    getUserProfile: (userId: string) => void\n    getStatus: (userId: string) => void\n    updateStatus: (status: string) => void\n}\nexport type MapStatePropsType = ReturnType<typeof mapStateToProps>\ntype PropsType = RouteComponentProps<pathParamsType> & MapStatePropsType & mapDispatchProfilePropsType\n\nclass ProfileContainer extends React.Component<PropsType, InitialStateProfileType> {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = String(this.props.authorizedUserId)\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                        updateStatus={this.props.updateStatus}/>\n    }\n}\n\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        profile: state.ProfilePage.profile,\n        status: state.ProfilePage.status,\n        authorizedUserId: state.auth.userId\n    }\n}\n\n\nexport default compose<FC>(\n    connect(mapStateToProps, {\n        getUserProfile,\n        getStatus,\n        updateStatus\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)","import React, { FC } from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../Redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: StateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport function WithAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props;\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n        return <WrappedComponent {...restProps as WCP}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n};\r\n\r\nexport default WithAuthRedirect;\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["Post","props","className","s","src","postUserSvg","alt","message","likesCount","MyPosts","memo","postsElements","posts","map","post","id","MyPostsAddItemForm","addPost","newPost","formik","useFormik","initialValues","onSubmit","values","handleSubmit","getFieldProps","MyPostsContainer","connect","state","ProfilePage","newPostText","profile","status","dispatch","addPostAC","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","snapshot","this","onDoubleClick","autoFocus","onChange","onBlur","bind","React","ProfileInfo","mainJpg","photos","large","fullName","lookingForAJobDescription","Preloader","Profile","ProfileContainer","userId","match","params","String","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","withRouter","withAuthRedirect","mapStateToProps","isAuth","WrappedComponent","restProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","to"],"sourceRoot":""}